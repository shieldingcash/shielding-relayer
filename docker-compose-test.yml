version: '2'

services:
  server:
    image: shieldingtrans/relayer:candidate
    restart: always
    command: server
    env_file: .env
    ports:
      - 8000:8000
    environment:
      REDIS_URL: redis://redis/0
      nginx_proxy_read_timeout: 600
    depends_on: [redis]

  dashboard:
    image: shieldingtrans/relayer:candidate
    restart: always
    command: dashboard
    env_file: .env
    ports:
      - 8001:8001
    environment:
      REDIS_URL: redis://redis/0
    depends_on: [redis]

  priceWatcher:
    image: shieldingtrans/relayer:candidate
    restart: always
    command: priceWatcher
    env_file: .env
    environment:
      REDIS_URL: redis://redis/0
    depends_on: [redis]

  healthWatcher:
    image: shieldingtrans/relayer:candidate
    restart: always
    command: healthWatcher
    env_file: .env
    environment:
      REDIS_URL: redis://redis/0
    depends_on: [redis]

  worker1:
    image: shieldingtrans/relayer:candidate
    restart: always
    command: worker
    env_file: .env
    environment:
      REDIS_URL: redis://redis/0
    depends_on: [redis]

  redis:
    image: redis
    restart: always
    command: [redis-server, --appendonly, 'yes']
    volumes:
      - redis:/data

volumes:
  redis:
